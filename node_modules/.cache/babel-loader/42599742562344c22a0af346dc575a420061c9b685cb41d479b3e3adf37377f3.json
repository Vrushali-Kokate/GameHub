{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91777\\\\Desktop\\\\React\\\\gamehub\\\\src\\\\games\\\\SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOARD_SIZE = 20; // 20x20 grid\n\nconst DIRECTIONS = {\n  ArrowUp: [0, -1],\n  ArrowDown: [0, 1],\n  ArrowLeft: [-1, 0],\n  ArrowRight: [1, 0]\n};\nfunction SnakeGame() {\n  _s();\n  const [snake, setSnake] = useState([[10, 10]]);\n  const [direction, setDirection] = useState([0, -1]);\n  const [food, setFood] = useState([5, 5]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const moveSnake = () => {\n    setSnake(prevSnake => {\n      const [headX, headY] = prevSnake[0];\n      const [dx, dy] = direction;\n      const newHead = [headX + dx, headY + dy];\n\n      // Check wall collision\n      if (newHead[0] < 0 || newHead[0] >= BOARD_SIZE || newHead[1] < 0 || newHead[1] >= BOARD_SIZE || prevSnake.some(segment => segment[0] === newHead[0] && segment[1] === newHead[1])) {\n        setIsRunning(false);\n        setGameOver(true);\n        return prevSnake;\n      }\n      let newSnake = [newHead, ...prevSnake];\n      // Check food eaten\n      if (newHead[0] === food[0] && newHead[1] === food[1]) {\n        setScore(score + 1);\n        placeFood(newSnake);\n      } else {\n        newSnake.pop();\n      }\n      return newSnake;\n    });\n  };\n  const placeFood = snakePositions => {\n    let newFood;\n    do {\n      newFood = [Math.floor(Math.random() * BOARD_SIZE), Math.floor(Math.random() * BOARD_SIZE)];\n    } while (snakePositions.some(pos => pos[0] === newFood[0] && pos[1] === newFood[1]));\n    setFood(newFood);\n  };\n\n  // Handle key events\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (DIRECTIONS[e.key]) {\n        const [dx, dy] = DIRECTIONS[e.key];\n        const [curDx, curDy] = direction;\n        // Prevent reverse movement\n        if (dx !== -curDx || dy !== -curDy) {\n          setDirection([dx, dy]);\n        }\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [direction]);\n\n  // Game loop\n  useEffect(() => {\n    if (!isRunning) return;\n    const interval = setInterval(moveSnake, 150);\n    return () => clearInterval(interval);\n  }, [isRunning, direction, snake]);\n  const startGame = () => {\n    setSnake([[10, 10]]);\n    setDirection([0, -1]);\n    setScore(0);\n    setGameOver(false);\n    placeFood([[10, 10]]);\n    setIsRunning(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center p-6 bg-gradient-to-br from-green-100 to-lime-100 rounded-lg shadow-lg max-w-md mx-auto min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl font-extrabold mb-6 text-green-800\",\n      children: \"Snake Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[400px] h-[400px] bg-white border-4 border-green-600 grid grid-cols-20 grid-rows-20 rounded-lg relative select-none\",\n      children: Array.from({\n        length: BOARD_SIZE * BOARD_SIZE\n      }, (_, idx) => {\n        const x = idx % BOARD_SIZE;\n        const y = Math.floor(idx / BOARD_SIZE);\n        const isSnake = snake.some(segment => segment[0] === x && segment[1] === y);\n        const isFood = food[0] === x && food[1] === y;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-full h-full transition-colors duration-150 ${isSnake ? 'bg-green-600 rounded' : isFood ? 'bg-red-500 rounded-full' : 'bg-green-100'}`\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 font-semibold text-lg text-green-700\",\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-600 font-bold mt-2\",\n      children: \"Game Over! Press Start to play again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      className: \"mt-4 bg-green-600 text-white px-6 py-3 rounded-lg font-bold shadow-lg hover:bg-green-700 transition\",\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(SnakeGame, \"UVd8E1KUREkD64pGwxq6uD4xYhY=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","BOARD_SIZE","DIRECTIONS","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","SnakeGame","_s","snake","setSnake","direction","setDirection","food","setFood","isRunning","setIsRunning","score","setScore","gameOver","setGameOver","moveSnake","prevSnake","headX","headY","dx","dy","newHead","some","segment","newSnake","placeFood","pop","snakePositions","newFood","Math","floor","random","pos","handleKeyDown","e","key","curDx","curDy","window","addEventListener","removeEventListener","interval","setInterval","clearInterval","startGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","_","idx","x","y","isSnake","isFood","onClick","_c","$RefreshReg$"],"sources":["C:/Users/91777/Desktop/React/gamehub/src/games/SnakeGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst BOARD_SIZE = 20; // 20x20 grid\r\n\r\nconst DIRECTIONS = {\r\n  ArrowUp: [0, -1],\r\n  ArrowDown: [0, 1],\r\n  ArrowLeft: [-1, 0],\r\n  ArrowRight: [1, 0],\r\n};\r\n\r\nfunction SnakeGame() {\r\n  const [snake, setSnake] = useState([[10,10]]);\r\n  const [direction, setDirection] = useState([0, -1]);\r\n  const [food, setFood] = useState([5,5]);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  const moveSnake = () => {\r\n    setSnake(prevSnake => {\r\n      const [headX, headY] = prevSnake[0];\r\n      const [dx, dy] = direction;\r\n      const newHead = [headX + dx, headY + dy];\r\n\r\n      // Check wall collision\r\n      if (\r\n        newHead[0] < 0 || newHead[0] >= BOARD_SIZE ||\r\n        newHead[1] < 0 || newHead[1] >= BOARD_SIZE ||\r\n        prevSnake.some(segment => segment[0] === newHead[0] && segment[1] === newHead[1])\r\n      ) {\r\n        setIsRunning(false);\r\n        setGameOver(true);\r\n        return prevSnake;\r\n      }\r\n\r\n      let newSnake = [newHead, ...prevSnake];\r\n      // Check food eaten\r\n      if (newHead[0] === food[0] && newHead[1] === food[1]) {\r\n        setScore(score + 1);\r\n        placeFood(newSnake);\r\n      } else {\r\n        newSnake.pop();\r\n      }\r\n      return newSnake;\r\n    });\r\n  };\r\n\r\n  const placeFood = (snakePositions) => {\r\n    let newFood;\r\n    do {\r\n      newFood = [Math.floor(Math.random() * BOARD_SIZE), Math.floor(Math.random() * BOARD_SIZE)];\r\n    } while(snakePositions.some(pos => pos[0] === newFood[0] && pos[1] === newFood[1]));\r\n    setFood(newFood);\r\n  };\r\n\r\n  // Handle key events\r\n  useEffect(() => {\r\n    const handleKeyDown = e => {\r\n      if (DIRECTIONS[e.key]) {\r\n        const [dx, dy] = DIRECTIONS[e.key];\r\n        const [curDx, curDy] = direction;\r\n        // Prevent reverse movement\r\n        if (dx !== -curDx || dy !== -curDy) {\r\n          setDirection([dx, dy]);\r\n        }\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  }, [direction]);\r\n\r\n  // Game loop\r\n  useEffect(() => {\r\n    if (!isRunning) return;\r\n    const interval = setInterval(moveSnake, 150);\r\n    return () => clearInterval(interval);\r\n  }, [isRunning, direction, snake]);\r\n\r\n  const startGame = () => {\r\n    setSnake([[10,10]]);\r\n    setDirection([0,-1]);\r\n    setScore(0);\r\n    setGameOver(false);\r\n    placeFood([[10,10]]);\r\n    setIsRunning(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center p-6 bg-gradient-to-br from-green-100 to-lime-100 rounded-lg shadow-lg max-w-md mx-auto min-h-screen\">\r\n      <h2 className=\"text-4xl font-extrabold mb-6 text-green-800\">Snake Game</h2>\r\n      <div className=\"w-[400px] h-[400px] bg-white border-4 border-green-600 grid grid-cols-20 grid-rows-20 rounded-lg relative select-none\">\r\n        {Array.from({ length: BOARD_SIZE * BOARD_SIZE }, (_, idx) => {\r\n          const x = idx % BOARD_SIZE;\r\n          const y = Math.floor(idx / BOARD_SIZE);\r\n          const isSnake = snake.some(segment => segment[0] === x && segment[1] === y);\r\n          const isFood = food[0] === x && food[1] === y;\r\n          return (\r\n            <div\r\n              key={idx}\r\n              className={`w-full h-full transition-colors duration-150 ${\r\n                isSnake ? 'bg-green-600 rounded' : isFood ? 'bg-red-500 rounded-full' : 'bg-green-100'\r\n              }`}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <p className=\"mt-4 font-semibold text-lg text-green-700\">Score: {score}</p>\r\n      {gameOver && <p className=\"text-red-600 font-bold mt-2\">Game Over! Press Start to play again.</p>}\r\n      <button\r\n        onClick={startGame}\r\n        className=\"mt-4 bg-green-600 text-white px-6 py-3 rounded-lg font-bold shadow-lg hover:bg-green-700 transition\"\r\n      >\r\n        Start Game\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SnakeGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}