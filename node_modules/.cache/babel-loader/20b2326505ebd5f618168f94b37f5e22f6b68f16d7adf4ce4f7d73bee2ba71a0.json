{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91777\\\\Desktop\\\\React\\\\gamehub\\\\src\\\\games\\\\TicTacToe.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Play } from 'lucide-react';\n\n// function TicTacToe({ setSelectedGame, setGameMode }) {\n//   const [board, setBoard] = useState(Array(9).fill(null));\n//   const [turn, setTurn] = useState('X');\n//   const [winner, setWinner] = useState(null);\n\n//   const winPatterns = [\n//     [0,1,2],[3,4,5],[6,7,8], // rows\n//     [0,3,6],[1,4,7],[2,5,8], // cols\n//     [0,4,8],[2,4,6]          // diagonals\n//   ];\n\n//   const checkWinner = (currentBoard) => {\n//     for (const [a,b,c] of winPatterns) {\n//       if (currentBoard[a] && currentBoard[a] === currentBoard[b] && currentBoard[a] === currentBoard[c]) {\n//         return currentBoard[a];\n//       }\n//     }\n//     return null;\n//   };\n\n//   const handleClick = (index) => {\n//     if (board[index] || winner) return;\n\n//     const newBoard = board.slice();\n//     newBoard[index] = turn;\n//     setBoard(newBoard);\n\n//     const win = checkWinner(newBoard);\n//     if (win) {\n//       setWinner(win);\n//     } else if (!newBoard.includes(null)) {\n//       setWinner('draw');\n//     } else {\n//       setTurn(turn === 'X' ? 'O' : 'X');\n//     }\n//   };\n\n//   const restartGame = () => {\n//     setBoard(Array(9).fill(null));\n//     setTurn('X');\n//     setWinner(null);\n//   };\n\n//   return (\n//     <div className=\"flex flex-col items-center justify-center p-4 bg-gradient-to-br from-blue-100 to-purple-100 min-h-screen rounded-lg shadow-lg w-full max-w-lg mx-auto\">\n//       <h2 className=\"text-4xl font-extrabold text-gray-800 mb-6 tracking-wide\">Tic Tac Toe</h2>\n//       <div className=\"grid grid-cols-3 gap-3 mb-6 bg-white p-4 rounded-xl shadow-xl\">\n//         {board.map((cell, idx) => (\n//           <div\n//             key={idx}\n//             onClick={() => handleClick(idx)}\n//             className=\"w-28 h-28 sm:w-32 sm:h-32 md:w-36 md:h-36 lg:w-40 lg:h-40 bg-gray-50 flex items-center justify-center text-6xl sm:text-7xl md:text-8xl font-bold text-gray-700 rounded-xl shadow-md cursor-pointer transition-all duration-200 ease-in-out hover:bg-gray-200 active:scale-95\"\n//           >\n//             {cell}\n//           </div>\n//         ))}\n//       </div>\n//       <div className=\"text-2xl font-semibold text-gray-700 mb-6\">\n//         {!winner && `Player ${turn}'s turn`}\n//         {winner === 'draw' && \"It's a draw!\"}\n//         {winner && winner !== 'draw' && `Player ${winner} wins!`}\n//       </div>\n//       <button\n//         onClick={restartGame}\n//         className=\"px-8 py-3 bg-gradient-to-r from-green-500 to-teal-600 text-white font-bold text-lg rounded-full shadow-lg hover:from-green-600 hover:to-teal-700 transition-all duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-green-300\"\n//       >\n//         Restart Game <Play className=\"inline-block ml-2 w-5 h-5\" />\n//       </button>\n//       <button\n//         onClick={() => { setSelectedGame(null); setGameMode(null); }}\n//         className=\"mt-4 px-8 py-3 bg-gray-600 text-white font-bold text-lg rounded-full shadow-lg hover:bg-gray-700 transition-all duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-gray-300\"\n//       >\n//         Back to Mode Selection\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default TicTacToe;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TicTacToe() {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const calculateWinner = squares => {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8],\n    // rows\n    [0, 3, 6], [1, 4, 7], [2, 5, 8],\n    // columns\n    [0, 4, 8], [2, 4, 6] // diagonals\n    ];\n    for (const [a, b, c] of lines) {\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  };\n  const winner = calculateWinner(board);\n  const handleClick = i => {\n    if (board[i] || winner) return;\n    const nextBoard = board.slice();\n    nextBoard[i] = xIsNext ? 'X' : 'O';\n    setBoard(nextBoard);\n    setXIsNext(!xIsNext);\n  };\n  const resetGame = () => {\n    setBoard(Array(9).fill(null));\n    setXIsNext(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center p-6 bg-gradient-to-br from-purple-100 to-pink-100 rounded-lg shadow-lg max-w-sm mx-auto min-h-screen justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl font-extrabold mb-6 text-gray-800\",\n      children: \"Tic-Tac-Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-3\",\n      children: board.map((cell, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick(i),\n        className: \"w-20 h-20 flex items-center justify-center text-4xl font-bold text-purple-700 bg-white rounded-lg shadow hover:bg-purple-50 focus:outline-none\",\n        children: cell\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-6 text-xl font-semibold text-gray-700 min-h-[1.5em]\",\n      children: winner ? `Winner: ${winner}` : board.includes(null) ? `Next player: ${xIsNext ? 'X' : 'O'}` : 'Draw!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      className: \"mt-6 px-6 py-3 bg-purple-600 text-white font-bold rounded-lg shadow hover:bg-purple-700 transition\",\n      children: \"Restart Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(TicTacToe, \"znBF1eYeJNOReqN4BeETvwkOe4A=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TicTacToe","_s","board","setBoard","Array","fill","xIsNext","setXIsNext","calculateWinner","squares","lines","a","b","c","winner","handleClick","i","nextBoard","slice","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","cell","onClick","includes","_c","$RefreshReg$"],"sources":["C:/Users/91777/Desktop/React/gamehub/src/games/TicTacToe.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { Play } from 'lucide-react';\r\n\r\n// function TicTacToe({ setSelectedGame, setGameMode }) {\r\n//   const [board, setBoard] = useState(Array(9).fill(null));\r\n//   const [turn, setTurn] = useState('X');\r\n//   const [winner, setWinner] = useState(null);\r\n\r\n//   const winPatterns = [\r\n//     [0,1,2],[3,4,5],[6,7,8], // rows\r\n//     [0,3,6],[1,4,7],[2,5,8], // cols\r\n//     [0,4,8],[2,4,6]          // diagonals\r\n//   ];\r\n\r\n//   const checkWinner = (currentBoard) => {\r\n//     for (const [a,b,c] of winPatterns) {\r\n//       if (currentBoard[a] && currentBoard[a] === currentBoard[b] && currentBoard[a] === currentBoard[c]) {\r\n//         return currentBoard[a];\r\n//       }\r\n//     }\r\n//     return null;\r\n//   };\r\n\r\n//   const handleClick = (index) => {\r\n//     if (board[index] || winner) return;\r\n\r\n//     const newBoard = board.slice();\r\n//     newBoard[index] = turn;\r\n//     setBoard(newBoard);\r\n\r\n//     const win = checkWinner(newBoard);\r\n//     if (win) {\r\n//       setWinner(win);\r\n//     } else if (!newBoard.includes(null)) {\r\n//       setWinner('draw');\r\n//     } else {\r\n//       setTurn(turn === 'X' ? 'O' : 'X');\r\n//     }\r\n//   };\r\n\r\n//   const restartGame = () => {\r\n//     setBoard(Array(9).fill(null));\r\n//     setTurn('X');\r\n//     setWinner(null);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex flex-col items-center justify-center p-4 bg-gradient-to-br from-blue-100 to-purple-100 min-h-screen rounded-lg shadow-lg w-full max-w-lg mx-auto\">\r\n//       <h2 className=\"text-4xl font-extrabold text-gray-800 mb-6 tracking-wide\">Tic Tac Toe</h2>\r\n//       <div className=\"grid grid-cols-3 gap-3 mb-6 bg-white p-4 rounded-xl shadow-xl\">\r\n//         {board.map((cell, idx) => (\r\n//           <div\r\n//             key={idx}\r\n//             onClick={() => handleClick(idx)}\r\n//             className=\"w-28 h-28 sm:w-32 sm:h-32 md:w-36 md:h-36 lg:w-40 lg:h-40 bg-gray-50 flex items-center justify-center text-6xl sm:text-7xl md:text-8xl font-bold text-gray-700 rounded-xl shadow-md cursor-pointer transition-all duration-200 ease-in-out hover:bg-gray-200 active:scale-95\"\r\n//           >\r\n//             {cell}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//       <div className=\"text-2xl font-semibold text-gray-700 mb-6\">\r\n//         {!winner && `Player ${turn}'s turn`}\r\n//         {winner === 'draw' && \"It's a draw!\"}\r\n//         {winner && winner !== 'draw' && `Player ${winner} wins!`}\r\n//       </div>\r\n//       <button\r\n//         onClick={restartGame}\r\n//         className=\"px-8 py-3 bg-gradient-to-r from-green-500 to-teal-600 text-white font-bold text-lg rounded-full shadow-lg hover:from-green-600 hover:to-teal-700 transition-all duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-green-300\"\r\n//       >\r\n//         Restart Game <Play className=\"inline-block ml-2 w-5 h-5\" />\r\n//       </button>\r\n//       <button\r\n//         onClick={() => { setSelectedGame(null); setGameMode(null); }}\r\n//         className=\"mt-4 px-8 py-3 bg-gray-600 text-white font-bold text-lg rounded-full shadow-lg hover:bg-gray-700 transition-all duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-gray-300\"\r\n//       >\r\n//         Back to Mode Selection\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TicTacToe;\r\n\r\nimport React, { useState } from 'react';\r\n\r\nfunction TicTacToe() {\r\n  const [board, setBoard] = useState(Array(9).fill(null));\r\n  const [xIsNext, setXIsNext] = useState(true);\r\n\r\n  const calculateWinner = (squares) => {\r\n    const lines = [\r\n      [0,1,2],[3,4,5],[6,7,8], // rows\r\n      [0,3,6],[1,4,7],[2,5,8], // columns\r\n      [0,4,8],[2,4,6] // diagonals\r\n    ];\r\n    for (const [a,b,c] of lines) {\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const winner = calculateWinner(board);\r\n\r\n  const handleClick = (i) => {\r\n    if (board[i] || winner) return;\r\n    const nextBoard = board.slice();\r\n    nextBoard[i] = xIsNext ? 'X' : 'O';\r\n    setBoard(nextBoard);\r\n    setXIsNext(!xIsNext);\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setBoard(Array(9).fill(null));\r\n    setXIsNext(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center p-6 bg-gradient-to-br from-purple-100 to-pink-100 rounded-lg shadow-lg max-w-sm mx-auto min-h-screen justify-center\">\r\n      <h2 className=\"text-4xl font-extrabold mb-6 text-gray-800\">Tic-Tac-Toe</h2>\r\n      <div className=\"grid grid-cols-3 gap-3\">\r\n        {board.map((cell, i) => (\r\n          <button\r\n            key={i}\r\n            onClick={() => handleClick(i)}\r\n            className=\"w-20 h-20 flex items-center justify-center text-4xl font-bold text-purple-700 bg-white rounded-lg shadow hover:bg-purple-50 focus:outline-none\"\r\n          >\r\n            {cell}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <p className=\"mt-6 text-xl font-semibold text-gray-700 min-h-[1.5em]\">\r\n        {winner ? `Winner: ${winner}` : board.includes(null) ? `Next player: ${xIsNext ? 'X' : 'O'}` : 'Draw!'}\r\n      </p>\r\n      <button\r\n        onClick={resetGame}\r\n        className=\"mt-6 px-6 py-3 bg-purple-600 text-white font-bold rounded-lg shadow hover:bg-purple-700 transition\"\r\n      >\r\n        Restart Game\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TicTacToe;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACO,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACvD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMW,eAAe,GAAIC,OAAO,IAAK;IACnC,MAAMC,KAAK,GAAG,CACZ,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;IAAE;IACzB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;IAAE;IACzB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;IAAA,CACjB;IACD,KAAK,MAAM,CAACC,CAAC,EAACC,CAAC,EAACC,CAAC,CAAC,IAAIH,KAAK,EAAE;MAC3B,IAAID,OAAO,CAACE,CAAC,CAAC,IAAIF,OAAO,CAACE,CAAC,CAAC,KAAKF,OAAO,CAACG,CAAC,CAAC,IAAIH,OAAO,CAACE,CAAC,CAAC,KAAKF,OAAO,CAACI,CAAC,CAAC,EAAE;QACxE,OAAOJ,OAAO,CAACE,CAAC,CAAC;MACnB;IACF;IACA,OAAO,IAAI;EACb,CAAC;EAED,MAAMG,MAAM,GAAGN,eAAe,CAACN,KAAK,CAAC;EAErC,MAAMa,WAAW,GAAIC,CAAC,IAAK;IACzB,IAAId,KAAK,CAACc,CAAC,CAAC,IAAIF,MAAM,EAAE;IACxB,MAAMG,SAAS,GAAGf,KAAK,CAACgB,KAAK,CAAC,CAAC;IAC/BD,SAAS,CAACD,CAAC,CAAC,GAAGV,OAAO,GAAG,GAAG,GAAG,GAAG;IAClCH,QAAQ,CAACc,SAAS,CAAC;IACnBV,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAED,MAAMa,SAAS,GAAGA,CAAA,KAAM;IACtBhB,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7BE,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,oBACER,OAAA;IAAKqB,SAAS,EAAC,gJAAgJ;IAAAC,QAAA,gBAC7JtB,OAAA;MAAIqB,SAAS,EAAC,4CAA4C;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3E1B,OAAA;MAAKqB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EACpCnB,KAAK,CAACwB,GAAG,CAAC,CAACC,IAAI,EAAEX,CAAC,kBACjBjB,OAAA;QAEE6B,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAACC,CAAC,CAAE;QAC9BI,SAAS,EAAC,gJAAgJ;QAAAC,QAAA,EAEzJM;MAAI,GAJAX,CAAC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKA,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1B,OAAA;MAAGqB,SAAS,EAAC,wDAAwD;MAAAC,QAAA,EAClEP,MAAM,GAAG,WAAWA,MAAM,EAAE,GAAGZ,KAAK,CAAC2B,QAAQ,CAAC,IAAI,CAAC,GAAG,gBAAgBvB,OAAO,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrG,CAAC,eACJ1B,OAAA;MACE6B,OAAO,EAAET,SAAU;MACnBC,SAAS,EAAC,oGAAoG;MAAAC,QAAA,EAC/G;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACxB,EAAA,CA1DQD,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AA4DlB,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}