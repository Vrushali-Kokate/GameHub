{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91777\\\\Desktop\\\\React\\\\gamehub\\\\src\\\\games\\\\MemoryGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Play } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateCards = () => {\n  const cardValues = Array.from({\n    length: 8\n  }, (_, i) => i + 1); // Create pairs of numbers 1-8\n  const cards = [...cardValues, ...cardValues]; // Duplicate for pairs\n  return cards.sort(() => Math.random() - 0.5); // Shuffle cards\n};\nfunction MemoryGame({\n  setSelectedGame,\n  setGameMode\n}) {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [matchedCards, setMatchedCards] = useState([]);\n  const [isGameActive, setIsGameActive] = useState(false);\n  useEffect(() => {\n    if (isGameActive) {\n      setCards(generateCards());\n    }\n  }, [isGameActive]);\n  const handleCardClick = index => {\n    if (flippedCards.length < 2 && !flippedCards.includes(index) && !matchedCards.includes(index)) {\n      setFlippedCards(prev => [...prev, index]);\n      if (flippedCards.length === 1) {\n        const firstCardIndex = flippedCards[0];\n        const secondCardValue = cards[index];\n        const firstCardValue = cards[firstCardIndex];\n        if (firstCardValue === secondCardValue) {\n          setMatchedCards(prev => [...prev, firstCardIndex, index]);\n        }\n        setTimeout(() => {\n          setFlippedCards([]);\n        }, 1000);\n      }\n    }\n  };\n  const startNewGame = () => {\n    setIsGameActive(true);\n    setFlippedCards([]);\n    setMatchedCards([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center p-8 bg-gradient-to-br from-yellow-100 to-orange-100 min-h-screen rounded-lg shadow-lg w-full max-w-lg mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl font-extrabold text-gray-800 mb-6 tracking-wide\",\n      children: \"Memory Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl text-gray-700 mb-8\",\n      children: \"Match pairs of cards in this classic memory challenge!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-4 gap-4 bg-white p-6 rounded-xl shadow-xl\",\n      children: cards.map((value, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleCardClick(idx),\n        className: `w-24 h-24 rounded-lg flex items-center justify-center text-3xl font-bold text-indigo-700 shadow-md cursor-pointer transition-all duration-200 ${flippedCards.includes(idx) || matchedCards.includes(idx) ? 'bg-indigo-300' : 'bg-indigo-200'}`,\n        children: flippedCards.includes(idx) || matchedCards.includes(idx) ? value : '?'\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startNewGame,\n      className: \"mt-10 px-8 py-3 bg-gradient-to-r from-red-500 to-pink-600 text-white font-bold text-lg rounded-full shadow-lg hover:from-red-600 hover:to-pink-700 transition-all duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-red-300\",\n      children: [\"Start New Game \", /*#__PURE__*/_jsxDEV(Play, {\n        className: \"inline-block ml-2 w-5 h-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setSelectedGame(null);\n        setGameMode(null);\n      },\n      className: \"mt-4 px-8 py-3 bg-gray-600 text-white font-bold text-lg rounded-full shadow-lg hover:bg-gray-700 transition-all duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-gray-300\",\n      children: \"Back to Mode Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(MemoryGame, \"W/lxNzr8UUpa4eVPwuRL+bJ8KJE=\");\n_c = MemoryGame;\nexport default MemoryGame;\nvar _c;\n$RefreshReg$(_c, \"MemoryGame\");","map":{"version":3,"names":["React","useState","useEffect","Play","jsxDEV","_jsxDEV","generateCards","cardValues","Array","from","length","_","i","cards","sort","Math","random","MemoryGame","setSelectedGame","setGameMode","_s","setCards","flippedCards","setFlippedCards","matchedCards","setMatchedCards","isGameActive","setIsGameActive","handleCardClick","index","includes","prev","firstCardIndex","secondCardValue","firstCardValue","setTimeout","startNewGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","value","idx","onClick","_c","$RefreshReg$"],"sources":["C:/Users/91777/Desktop/React/gamehub/src/games/MemoryGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Play } from 'lucide-react';\r\n\r\nconst generateCards = () => {\r\n  const cardValues = Array.from({ length: 8 }, (_, i) => i + 1); // Create pairs of numbers 1-8\r\n  const cards = [...cardValues, ...cardValues]; // Duplicate for pairs\r\n  return cards.sort(() => Math.random() - 0.5); // Shuffle cards\r\n};\r\n\r\nfunction MemoryGame({ setSelectedGame, setGameMode }) {\r\n  const [cards, setCards] = useState([]);\r\n  const [flippedCards, setFlippedCards] = useState([]);\r\n  const [matchedCards, setMatchedCards] = useState([]);\r\n  const [isGameActive, setIsGameActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isGameActive) {\r\n      setCards(generateCards());\r\n    }\r\n  }, [isGameActive]);\r\n\r\n  const handleCardClick = (index) => {\r\n    if (flippedCards.length < 2 && !flippedCards.includes(index) && !matchedCards.includes(index)) {\r\n      setFlippedCards((prev) => [...prev, index]);\r\n\r\n      if (flippedCards.length === 1) {\r\n        const firstCardIndex = flippedCards[0];\r\n        const secondCardValue = cards[index];\r\n        const firstCardValue = cards[firstCardIndex];\r\n\r\n        if (firstCardValue === secondCardValue) {\r\n          setMatchedCards((prev) => [...prev, firstCardIndex, index]);\r\n        }\r\n\r\n        setTimeout(() => {\r\n          setFlippedCards([]);\r\n        }, 1000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const startNewGame = () => {\r\n    setIsGameActive(true);\r\n    setFlippedCards([]);\r\n    setMatchedCards([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center p-8 bg-gradient-to-br from-yellow-100 to-orange-100 min-h-screen rounded-lg shadow-lg w-full max-w-lg mx-auto\">\r\n      <h2 className=\"text-4xl font-extrabold text-gray-800 mb-6 tracking-wide\">Memory Game</h2>\r\n      <p className=\"text-xl text-gray-700 mb-8\">\r\n        Match pairs of cards in this classic memory challenge!\r\n      </p>\r\n      <div className=\"grid grid-cols-4 gap-4 bg-white p-6 rounded-xl shadow-xl\">\r\n        {cards.map((value, idx) => (\r\n          <div\r\n            key={idx}\r\n            onClick={() => handleCardClick(idx)}\r\n            className={`w-24 h-24 rounded-lg flex items-center justify-center text-3xl font-bold text-indigo-700 shadow-md cursor-pointer transition-all duration-200 ${\r\n              flippedCards.includes(idx) || matchedCards.includes(idx) ? 'bg-indigo-300' : 'bg-indigo-200'\r\n            }`}\r\n          >\r\n            {flippedCards.includes(idx) || matchedCards.includes(idx) ? value : '?'}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button\r\n        onClick={startNewGame}\r\n        className=\"mt-10 px-8 py-3 bg-gradient-to-r from-red-500 to-pink-600 text-white font-bold text-lg rounded-full shadow-lg hover:from-red-600 hover:to-pink-700 transition-all duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-red-300\"\r\n      >\r\n        Start New Game <Play className=\"inline-block ml-2 w-5 h-5\" />\r\n      </button>\r\n      <button\r\n        onClick={() => { setSelectedGame(null); setGameMode(null); }}\r\n        className=\"mt-4 px-8 py-3 bg-gray-600 text-white font-bold text-lg rounded-full shadow-lg hover:bg-gray-700 transition-all duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-gray-300\"\r\n      >\r\n        Back to Mode Selection\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemoryGame;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC/D,MAAMC,KAAK,GAAG,CAAC,GAAGN,UAAU,EAAE,GAAGA,UAAU,CAAC,CAAC,CAAC;EAC9C,OAAOM,KAAK,CAACC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAChD,CAAC;AAED,SAASC,UAAUA,CAAC;EAAEC,eAAe;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACpD,MAAM,CAACP,KAAK,EAAEQ,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd,IAAIwB,YAAY,EAAE;MAChBL,QAAQ,CAACf,aAAa,CAAC,CAAC,CAAC;IAC3B;EACF,CAAC,EAAE,CAACoB,YAAY,CAAC,CAAC;EAElB,MAAME,eAAe,GAAIC,KAAK,IAAK;IACjC,IAAIP,YAAY,CAACZ,MAAM,GAAG,CAAC,IAAI,CAACY,YAAY,CAACQ,QAAQ,CAACD,KAAK,CAAC,IAAI,CAACL,YAAY,CAACM,QAAQ,CAACD,KAAK,CAAC,EAAE;MAC7FN,eAAe,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEF,KAAK,CAAC,CAAC;MAE3C,IAAIP,YAAY,CAACZ,MAAM,KAAK,CAAC,EAAE;QAC7B,MAAMsB,cAAc,GAAGV,YAAY,CAAC,CAAC,CAAC;QACtC,MAAMW,eAAe,GAAGpB,KAAK,CAACgB,KAAK,CAAC;QACpC,MAAMK,cAAc,GAAGrB,KAAK,CAACmB,cAAc,CAAC;QAE5C,IAAIE,cAAc,KAAKD,eAAe,EAAE;UACtCR,eAAe,CAAEM,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEC,cAAc,EAAEH,KAAK,CAAC,CAAC;QAC7D;QAEAM,UAAU,CAAC,MAAM;UACfZ,eAAe,CAAC,EAAE,CAAC;QACrB,CAAC,EAAE,IAAI,CAAC;MACV;IACF;EACF,CAAC;EAED,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACzBT,eAAe,CAAC,IAAI,CAAC;IACrBJ,eAAe,CAAC,EAAE,CAAC;IACnBE,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,oBACEpB,OAAA;IAAKgC,SAAS,EAAC,yJAAyJ;IAAAC,QAAA,gBACtKjC,OAAA;MAAIgC,SAAS,EAAC,0DAA0D;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzFrC,OAAA;MAAGgC,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAC;IAE1C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACJrC,OAAA;MAAKgC,SAAS,EAAC,0DAA0D;MAAAC,QAAA,EACtEzB,KAAK,CAAC8B,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBACpBxC,OAAA;QAEEyC,OAAO,EAAEA,CAAA,KAAMlB,eAAe,CAACiB,GAAG,CAAE;QACpCR,SAAS,EAAE,iJACTf,YAAY,CAACQ,QAAQ,CAACe,GAAG,CAAC,IAAIrB,YAAY,CAACM,QAAQ,CAACe,GAAG,CAAC,GAAG,eAAe,GAAG,eAAe,EAC3F;QAAAP,QAAA,EAEFhB,YAAY,CAACQ,QAAQ,CAACe,GAAG,CAAC,IAAIrB,YAAY,CAACM,QAAQ,CAACe,GAAG,CAAC,GAAGD,KAAK,GAAG;MAAG,GANlEC,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOL,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrC,OAAA;MACEyC,OAAO,EAAEV,YAAa;MACtBC,SAAS,EAAC,yQAAyQ;MAAAC,QAAA,GACpR,iBACgB,eAAAjC,OAAA,CAACF,IAAI;QAACkC,SAAS,EAAC;MAA2B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eACTrC,OAAA;MACEyC,OAAO,EAAEA,CAAA,KAAM;QAAE5B,eAAe,CAAC,IAAI,CAAC;QAAEC,WAAW,CAAC,IAAI,CAAC;MAAE,CAAE;MAC7DkB,SAAS,EAAC,wNAAwN;MAAAC,QAAA,EACnO;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACtB,EAAA,CAvEQH,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAyEnB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}