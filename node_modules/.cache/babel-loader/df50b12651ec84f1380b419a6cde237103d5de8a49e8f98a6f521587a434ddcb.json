{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91777\\\\Desktop\\\\React\\\\gamehub\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// Import all components from their respective files\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomePage from './components/HomePage';\nimport GameSelection from './components/GameSelection';\nimport GameModeSelection from './components/GameModeSelection';\nimport AboutUsPage from './components/AboutUsPage';\nimport ContactPage from './components/ContactPage';\n\n// Import game components\nimport TicTacToe from './games/TicTacToe';\nimport MemoryGame from './games/MemoryGame';\nimport WhackAMoleGame from './games/WhackAMoleGame';\nimport PuzzleGame from './games/PuzzleGame';\nimport SnakeGame from './games/SnakeGame';\nimport ComingSoonGame from './games/ComingSoonGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to manage the currently selected page (e.g., 'home', 'games', 'about', 'contact')\n  const [currentPage, setCurrentPage] = useState('home');\n  // State to manage the currently selected game from the games list\n  const [selectedGame, setSelectedGame] = useState(null);\n  // State to manage solo/team mode for a selected game\n  const [gameMode, setGameMode] = useState(null);\n\n  // --- Main Content Rendering Logic ---\n  // Renders the appropriate content based on the current page, selected game, and game mode\n  const renderMainContent = () => {\n    // If a game is selected and a mode is chosen (or it's a 'coming soon' game that doesn't need mode selection)\n    if (selectedGame && (gameMode || ['ChessComingSoon', 'WhackAMoleGame', 'PuzzleGame'].includes(selectedGame))) {\n      switch (selectedGame) {\n        case 'TicTacToe':\n          return /*#__PURE__*/_jsxDEV(TicTacToe, {\n            setSelectedGame: setSelectedGame,\n            setGameMode: setGameMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 18\n          }, this);\n        // Pass state setters if needed\n        case 'MemoryGame':\n          return /*#__PURE__*/_jsxDEV(MemoryGame, {\n            setSelectedGame: setSelectedGame,\n            setGameMode: setGameMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 18\n          }, this);\n        case 'WhackAMoleGame':\n          return /*#__PURE__*/_jsxDEV(WhackAMoleGame, {\n            setSelectedGame: setSelectedGame\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 18\n          }, this);\n        case 'PuzzleGame':\n          return /*#__PURE__*/_jsxDEV(PuzzleGame, {\n            setSelectedGame: setSelectedGame\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 18\n          }, this);\n        case 'SnakeGame':\n          return /*#__PURE__*/_jsxDEV(SnakeGame, {\n            setSelectedGame: setSelectedGame\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 18\n          }, this);\n        case 'ChessComingSoon':\n          return /*#__PURE__*/_jsxDEV(ComingSoonGame, {\n            gameName: \"Chess\",\n            setSelectedGame: setSelectedGame\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 18\n          }, this);\n        default:\n          return /*#__PURE__*/_jsxDEV(GameSelection, {\n            setSelectedGame: setSelectedGame\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 18\n          }, this);\n        // Fallback to game selection\n      }\n    }\n    // If a game is selected but no mode is chosen, and it's not a 'coming soon' game\n    else if (selectedGame && !gameMode) {\n      return /*#__PURE__*/_jsxDEV(GameModeSelection, {\n        setSelectedGame: setSelectedGame,\n        setGameMode: setGameMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this);\n    }\n    // If no game is selected, render content based on the current page\n    else {\n      switch (currentPage) {\n        case 'home':\n          return /*#__PURE__*/_jsxDEV(HomePage, {\n            setCurrentPage: setCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 18\n          }, this);\n        case 'games':\n          return /*#__PURE__*/_jsxDEV(GameSelection, {\n            setSelectedGame: setSelectedGame\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 18\n          }, this);\n        case 'about':\n          return /*#__PURE__*/_jsxDEV(AboutUsPage, {\n            setCurrentPage: setCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 18\n          }, this);\n        case 'contact':\n          return /*#__PURE__*/_jsxDEV(ContactPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 18\n          }, this);\n        default:\n          return /*#__PURE__*/_jsxDEV(HomePage, {\n            setCurrentPage: setCurrentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 18\n          }, this);\n        // Default to home page\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col bg-gray-100 font-inter\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      setCurrentPage: setCurrentPage,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-grow flex items-center justify-center p-4\",\n      children: renderMainContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iKfNKGBWqQm2ocGPDL9HFZPZzfc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Footer","HomePage","GameSelection","GameModeSelection","AboutUsPage","ContactPage","TicTacToe","MemoryGame","WhackAMoleGame","PuzzleGame","SnakeGame","ComingSoonGame","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","selectedGame","setSelectedGame","gameMode","setGameMode","renderMainContent","includes","fileName","_jsxFileName","lineNumber","columnNumber","gameName","className","children","_c","$RefreshReg$"],"sources":["C:/Users/91777/Desktop/React/gamehub/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n// Import all components from their respective files\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomePage from './components/HomePage';\nimport GameSelection from './components/GameSelection';\nimport GameModeSelection from './components/GameModeSelection';\nimport AboutUsPage from './components/AboutUsPage';\nimport ContactPage from './components/ContactPage';\n\n// Import game components\nimport TicTacToe from './games/TicTacToe';\nimport MemoryGame from './games/MemoryGame';\nimport WhackAMoleGame from './games/WhackAMoleGame';\nimport PuzzleGame from './games/PuzzleGame';\nimport SnakeGame from './games/SnakeGame';\nimport ComingSoonGame from './games/ComingSoonGame';\n\n\nfunction App() {\n  // State to manage the currently selected page (e.g., 'home', 'games', 'about', 'contact')\n  const [currentPage, setCurrentPage] = useState('home');\n  // State to manage the currently selected game from the games list\n  const [selectedGame, setSelectedGame] = useState(null);\n  // State to manage solo/team mode for a selected game\n  const [gameMode, setGameMode] = useState(null);\n\n  // --- Main Content Rendering Logic ---\n  // Renders the appropriate content based on the current page, selected game, and game mode\n  const renderMainContent = () => {\n    // If a game is selected and a mode is chosen (or it's a 'coming soon' game that doesn't need mode selection)\n    if (selectedGame && (gameMode || ['ChessComingSoon', 'WhackAMoleGame', 'PuzzleGame'].includes(selectedGame))) {\n      switch (selectedGame) {\n        case 'TicTacToe':\n          return <TicTacToe setSelectedGame={setSelectedGame} setGameMode={setGameMode} />; // Pass state setters if needed\n        case 'MemoryGame':\n          return <MemoryGame setSelectedGame={setSelectedGame} setGameMode={setGameMode} />;\n        case 'WhackAMoleGame':\n          return <WhackAMoleGame setSelectedGame={setSelectedGame} />;\n        case 'PuzzleGame':\n          return <PuzzleGame setSelectedGame={setSelectedGame} />;\n          case 'SnakeGame':\n          return <SnakeGame setSelectedGame={setSelectedGame} />;\n        case 'ChessComingSoon':\n          return <ComingSoonGame gameName=\"Chess\" setSelectedGame={setSelectedGame} />;\n        default:\n          return <GameSelection setSelectedGame={setSelectedGame} />; // Fallback to game selection\n      }\n    }\n    // If a game is selected but no mode is chosen, and it's not a 'coming soon' game\n    else if (selectedGame && !gameMode) {\n      return <GameModeSelection setSelectedGame={setSelectedGame} setGameMode={setGameMode} />;\n    }\n    // If no game is selected, render content based on the current page\n    else {\n      switch (currentPage) {\n        case 'home':\n          return <HomePage setCurrentPage={setCurrentPage} />;\n        case 'games':\n          return <GameSelection setSelectedGame={setSelectedGame} />;\n        case 'about':\n          return <AboutUsPage setCurrentPage={setCurrentPage} />;\n        case 'contact':\n          return <ContactPage />;\n        default:\n          return <HomePage setCurrentPage={setCurrentPage} />; // Default to home page\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-gray-100 font-inter\">\n      <Header setCurrentPage={setCurrentPage} currentPage={currentPage} />\n      <main className=\"flex-grow flex items-center justify-center p-4\">\n        {renderMainContent()}\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}