{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91777\\\\Desktop\\\\React\\\\gamehub\\\\src\\\\games\\\\Hangman.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Play, RotateCcw } from 'lucide-react'; // For play and reset icons\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App({\n  setSelectedGame,\n  setGameMode\n}) {\n  _s();\n  // List of words for the game\n  const words = ['REACT', 'JAVASCRIPT', 'PROGRAMMING', 'DEVELOPER', 'COMPONENT', 'TAILWIND', 'RIDDHIMA'];\n\n  // State for game logic\n  const [wordToGuess, setWordToGuess] = useState('');\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const [incorrectGuesses, setIncorrectGuesses] = useState(0);\n  const [gameStatus, setGameStatus] = useState('playing'); // 'playing', 'won', 'lost'\n  const [gameStarted, setGameStarted] = useState(false); // To show initial start screen\n\n  const maxIncorrectGuesses = 6; // Number of body parts for the hangman\n\n  // Function to pick a new word and reset game state\n  const initializeGame = useCallback(() => {\n    const newWord = words[Math.floor(Math.random() * words.length)];\n    setWordToGuess(newWord);\n    setGuessedLetters([]);\n    setIncorrectGuesses(0);\n    setGameStatus('playing');\n    setGameStarted(true);\n  }, []); // No dependencies, so it's stable\n\n  // Effect to initialize game on component mount or when game starts\n  useEffect(() => {\n    if (gameStarted) {\n      initializeGame();\n    }\n  }, [gameStarted, initializeGame]);\n\n  // Check for win/loss conditions\n  useEffect(() => {\n    if (!gameStarted || gameStatus !== 'playing') return;\n    const hasWon = wordToGuess.split('').every(letter => guessedLetters.includes(letter));\n    if (hasWon) {\n      setGameStatus('won');\n    } else if (incorrectGuesses >= maxIncorrectGuesses) {\n      setGameStatus('lost');\n    }\n  }, [guessedLetters, incorrectGuesses, wordToGuess, gameStarted, gameStatus]);\n\n  // Handle letter guess\n  const handleGuess = letter => {\n    if (gameStatus !== 'playing' || guessedLetters.includes(letter)) {\n      return;\n    }\n    setGuessedLetters(prev => [...prev, letter]);\n    if (!wordToGuess.includes(letter)) {\n      setIncorrectGuesses(prev => prev + 1);\n    }\n  };\n\n  // Render the word to guess with underscores for unguessed letters\n  const renderWord = () => {\n    return wordToGuess.split('').map((letter, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"mx-1 text-5xl font-bold text-gray-900 border-b-4 border-gray-500\",\n      children: guessedLetters.includes(letter) ? letter : '_'\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this));\n  };\n\n  // Render the keyboard\n  const renderKeyboard = () => {\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 sm:grid-cols-8 gap-2 mt-8\",\n      children: alphabet.map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleGuess(letter),\n        disabled: guessedLetters.includes(letter) || gameStatus !== 'playing',\n        className: `\n              w-10 h-10 sm:w-12 sm:h-12 flex items-center justify-center\n              rounded-md font-bold text-lg sm:text-xl\n              transition-all duration-200 ease-in-out\n              ${guessedLetters.includes(letter) ? wordToGuess.includes(letter) ? 'bg-green-300 text-green-800' : 'bg-red-300 text-red-800' : 'bg-indigo-200 text-indigo-800 hover:bg-indigo-300'}\n              ${gameStatus !== 'playing' || guessedLetters.includes(letter) ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}\n            `,\n        children: letter\n      }, letter, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render hangman drawing based on incorrect guesses\n  const renderHangman = () => {\n    // Basic ASCII art for hangman\n    const hangmanStages = [`\n        +---+\n        |   |\n            |\n            |\n            |\n            |\n        =========\n      `, `\n        +---+\n        |   |\n        O   |\n            |\n            |\n            |\n        =========\n      `, `\n        +---+\n        |   |\n        O   |\n        |   |\n            |\n            |\n        =========\n      `, `\n        +---+\n        |   |\n        O   |\n       /|   |\n            |\n            |\n        =========\n      `, `\n        +---+\n        |   |\n        O   |\n       /|\\\\  |\n            |\n            |\n        =========\n      `, `\n        +---+\n        |   |\n        O   |\n       /|\\\\  |\n       /    |\n            |\n        =========\n      `, `\n        +---+\n        |   |\n        O   |\n       /|\\\\  |\n       / \\\\  |\n            |\n        =========\n      `];\n    return /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"text-left text-xl font-mono bg-gray-800 text-white p-4 rounded-lg shadow-inner mb-6\",\n      children: hangmanStages[incorrectGuesses]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center p-8 bg-gradient-to-br from-gray-100 to-slate-100 min-h-screen rounded-lg shadow-lg w-full max-w-lg mx-auto font-inter relative overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl font-extrabold text-gray-800 mb-4 tracking-wide\",\n      children: \"Hangman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl text-gray-700 mb-6 text-center\",\n      children: \"Guess the word before the hangman is complete!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), !gameStarted ?\n    /*#__PURE__*/\n    // Initial screen to start the game\n    _jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl text-gray-700 mb-8\",\n        children: \"Ready to test your vocabulary?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: initializeGame,\n        className: \"px-8 py-3 bg-gradient-to-r from-purple-500 to-pink-600 text-white font-bold text-lg rounded-full shadow-lg hover:from-purple-600 hover:to-pink-700 transition-all duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-purple-300 flex items-center justify-center\",\n        children: [\"Start Game \", /*#__PURE__*/_jsxDEV(Play, {\n          className: \"inline-block ml-2 w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderHangman(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mb-6\",\n        children: renderWord()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg font-semibold text-gray-700 mb-4\",\n        children: [\"Incorrect Guesses: \", incorrectGuesses, \" / \", maxIncorrectGuesses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), gameStatus === 'playing' && renderKeyboard(), gameStatus !== 'playing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 text-center\",\n        children: [gameStatus === 'won' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-4xl font-extrabold text-green-600 animate-pulse mb-4\",\n          children: \"\\uD83C\\uDF89 You Won! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }, this), gameStatus === 'lost' && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-4xl font-extrabold text-red-600 animate-pulse mb-4\",\n          children: [\"\\uD83D\\uDE14 You Lost! The word was: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-blue-600\",\n            children: wordToGuess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: initializeGame,\n          className: \"px-8 py-3 bg-gradient-to-r from-orange-500 to-red-600 text-white font-bold text-lg rounded-full shadow-lg hover:from-orange-600 hover:to-red-700 transition-all duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-orange-300 flex items-center justify-center mx-auto\",\n          children: [\"Play Again \", /*#__PURE__*/_jsxDEV(RotateCcw, {\n            className: \"inline-block ml-2 w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        if (setSelectedGame) setSelectedGame(null);\n        if (setGameMode) setGameMode(null);\n        console.log(\"Back button clicked\");\n      },\n      className: \"mt-8 px-8 py-3 bg-gray-600 text-white font-bold text-lg rounded-full shadow-lg hover:bg-gray-700 transition-all duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-gray-300\",\n      children: \"Back to Mode Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kkulRkpf5rHDuUcGID+a0p+lI1U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Play","RotateCcw","jsxDEV","_jsxDEV","Fragment","_Fragment","App","setSelectedGame","setGameMode","_s","words","wordToGuess","setWordToGuess","guessedLetters","setGuessedLetters","incorrectGuesses","setIncorrectGuesses","gameStatus","setGameStatus","gameStarted","setGameStarted","maxIncorrectGuesses","initializeGame","newWord","Math","floor","random","length","hasWon","split","every","letter","includes","handleGuess","prev","renderWord","map","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderKeyboard","alphabet","onClick","disabled","renderHangman","hangmanStages","console","log","_c","$RefreshReg$"],"sources":["C:/Users/91777/Desktop/React/gamehub/src/games/Hangman.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Play, RotateCcw } from 'lucide-react'; // For play and reset icons\r\n\r\nfunction App({ setSelectedGame, setGameMode }) {\r\n  // List of words for the game\r\n  const words = ['REACT', 'JAVASCRIPT', 'PROGRAMMING', 'DEVELOPER', 'COMPONENT', 'TAILWIND','RIDDHIMA'];\r\n\r\n  // State for game logic\r\n  const [wordToGuess, setWordToGuess] = useState('');\r\n  const [guessedLetters, setGuessedLetters] = useState([]);\r\n  const [incorrectGuesses, setIncorrectGuesses] = useState(0);\r\n  const [gameStatus, setGameStatus] = useState('playing'); // 'playing', 'won', 'lost'\r\n  const [gameStarted, setGameStarted] = useState(false); // To show initial start screen\r\n\r\n  const maxIncorrectGuesses = 6; // Number of body parts for the hangman\r\n\r\n  // Function to pick a new word and reset game state\r\n  const initializeGame = useCallback(() => {\r\n    const newWord = words[Math.floor(Math.random() * words.length)];\r\n    setWordToGuess(newWord);\r\n    setGuessedLetters([]);\r\n    setIncorrectGuesses(0);\r\n    setGameStatus('playing');\r\n    setGameStarted(true);\r\n  }, []); // No dependencies, so it's stable\r\n\r\n  // Effect to initialize game on component mount or when game starts\r\n  useEffect(() => {\r\n    if (gameStarted) {\r\n      initializeGame();\r\n    }\r\n  }, [gameStarted, initializeGame]);\r\n\r\n  // Check for win/loss conditions\r\n  useEffect(() => {\r\n    if (!gameStarted || gameStatus !== 'playing') return;\r\n\r\n    const hasWon = wordToGuess\r\n      .split('')\r\n      .every(letter => guessedLetters.includes(letter));\r\n\r\n    if (hasWon) {\r\n      setGameStatus('won');\r\n    } else if (incorrectGuesses >= maxIncorrectGuesses) {\r\n      setGameStatus('lost');\r\n    }\r\n  }, [guessedLetters, incorrectGuesses, wordToGuess, gameStarted, gameStatus]);\r\n\r\n  // Handle letter guess\r\n  const handleGuess = (letter) => {\r\n    if (gameStatus !== 'playing' || guessedLetters.includes(letter)) {\r\n      return;\r\n    }\r\n\r\n    setGuessedLetters((prev) => [...prev, letter]);\r\n\r\n    if (!wordToGuess.includes(letter)) {\r\n      setIncorrectGuesses((prev) => prev + 1);\r\n    }\r\n  };\r\n\r\n  // Render the word to guess with underscores for unguessed letters\r\n  const renderWord = () => {\r\n    return wordToGuess.split('').map((letter, index) => (\r\n      <span key={index} className=\"mx-1 text-5xl font-bold text-gray-900 border-b-4 border-gray-500\">\r\n        {guessedLetters.includes(letter) ? letter : '_'}\r\n      </span>\r\n    ));\r\n  };\r\n\r\n  // Render the keyboard\r\n  const renderKeyboard = () => {\r\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\r\n    return (\r\n      <div className=\"grid grid-cols-7 sm:grid-cols-8 gap-2 mt-8\">\r\n        {alphabet.map((letter) => (\r\n          <button\r\n            key={letter}\r\n            onClick={() => handleGuess(letter)}\r\n            disabled={guessedLetters.includes(letter) || gameStatus !== 'playing'}\r\n            className={`\r\n              w-10 h-10 sm:w-12 sm:h-12 flex items-center justify-center\r\n              rounded-md font-bold text-lg sm:text-xl\r\n              transition-all duration-200 ease-in-out\r\n              ${guessedLetters.includes(letter)\r\n                ? (wordToGuess.includes(letter) ? 'bg-green-300 text-green-800' : 'bg-red-300 text-red-800')\r\n                : 'bg-indigo-200 text-indigo-800 hover:bg-indigo-300'\r\n              }\r\n              ${gameStatus !== 'playing' || guessedLetters.includes(letter) ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}\r\n            `}\r\n          >\r\n            {letter}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Render hangman drawing based on incorrect guesses\r\n  const renderHangman = () => {\r\n    // Basic ASCII art for hangman\r\n    const hangmanStages = [\r\n      `\r\n        +---+\r\n        |   |\r\n            |\r\n            |\r\n            |\r\n            |\r\n        =========\r\n      `,\r\n      `\r\n        +---+\r\n        |   |\r\n        O   |\r\n            |\r\n            |\r\n            |\r\n        =========\r\n      `,\r\n      `\r\n        +---+\r\n        |   |\r\n        O   |\r\n        |   |\r\n            |\r\n            |\r\n        =========\r\n      `,\r\n      `\r\n        +---+\r\n        |   |\r\n        O   |\r\n       /|   |\r\n            |\r\n            |\r\n        =========\r\n      `,\r\n      `\r\n        +---+\r\n        |   |\r\n        O   |\r\n       /|\\\\  |\r\n            |\r\n            |\r\n        =========\r\n      `,\r\n      `\r\n        +---+\r\n        |   |\r\n        O   |\r\n       /|\\\\  |\r\n       /    |\r\n            |\r\n        =========\r\n      `,\r\n      `\r\n        +---+\r\n        |   |\r\n        O   |\r\n       /|\\\\  |\r\n       / \\\\  |\r\n            |\r\n        =========\r\n      `,\r\n    ];\r\n    return (\r\n      <pre className=\"text-left text-xl font-mono bg-gray-800 text-white p-4 rounded-lg shadow-inner mb-6\">\r\n        {hangmanStages[incorrectGuesses]}\r\n      </pre>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center p-8 bg-gradient-to-br from-gray-100 to-slate-100 min-h-screen rounded-lg shadow-lg w-full max-w-lg mx-auto font-inter relative overflow-hidden\">\r\n      <h2 className=\"text-4xl font-extrabold text-gray-800 mb-4 tracking-wide\">\r\n        Hangman\r\n      </h2>\r\n      <p className=\"text-xl text-gray-700 mb-6 text-center\">\r\n        Guess the word before the hangman is complete!\r\n      </p>\r\n\r\n      {!gameStarted ? (\r\n        // Initial screen to start the game\r\n        <div className=\"flex flex-col items-center justify-center\">\r\n          <p className=\"text-2xl text-gray-700 mb-8\">Ready to test your vocabulary?</p>\r\n          <button\r\n            onClick={initializeGame}\r\n            className=\"px-8 py-3 bg-gradient-to-r from-purple-500 to-pink-600 text-white font-bold text-lg rounded-full shadow-lg hover:from-purple-600 hover:to-pink-700 transition-all duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-purple-300 flex items-center justify-center\"\r\n          >\r\n            Start Game <Play className=\"inline-block ml-2 w-5 h-5\" />\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {renderHangman()}\r\n\r\n          <div className=\"flex justify-center mb-6\">\r\n            {renderWord()}\r\n          </div>\r\n\r\n          <p className=\"text-lg font-semibold text-gray-700 mb-4\">\r\n            Incorrect Guesses: {incorrectGuesses} / {maxIncorrectGuesses}\r\n          </p>\r\n\r\n          {gameStatus === 'playing' && renderKeyboard()}\r\n\r\n          {gameStatus !== 'playing' && (\r\n            <div className=\"mt-6 text-center\">\r\n              {gameStatus === 'won' && (\r\n                <p className=\"text-4xl font-extrabold text-green-600 animate-pulse mb-4\">\r\n                  🎉 You Won! 🎉\r\n                </p>\r\n              )}\r\n              {gameStatus === 'lost' && (\r\n                <p className=\"text-4xl font-extrabold text-red-600 animate-pulse mb-4\">\r\n                  😔 You Lost! The word was: <span className=\"text-blue-600\">{wordToGuess}</span>\r\n                </p>\r\n              )}\r\n              <button\r\n                onClick={initializeGame}\r\n                className=\"px-8 py-3 bg-gradient-to-r from-orange-500 to-red-600 text-white font-bold text-lg rounded-full shadow-lg hover:from-orange-600 hover:to-red-700 transition-all duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-orange-300 flex items-center justify-center mx-auto\"\r\n              >\r\n                Play Again <RotateCcw className=\"inline-block ml-2 w-5 h-5\" />\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {/* Back to Mode Selection Button */}\r\n      <button\r\n        onClick={() => {\r\n          if (setSelectedGame) setSelectedGame(null);\r\n          if (setGameMode) setGameMode(null);\r\n          console.log(\"Back button clicked\");\r\n        }}\r\n        className=\"mt-8 px-8 py-3 bg-gray-600 text-white font-bold text-lg rounded-full shadow-lg hover:bg-gray-700 transition-all duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-gray-300\"\r\n      >\r\n        Back to Mode Selection\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}