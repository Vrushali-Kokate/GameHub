{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91777\\\\Desktop\\\\React\\\\gamehub\\\\src\\\\components\\\\Games.js\",\n  _s = $RefreshSig$();\n// TicTacToe.jsx\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: {\n    textAlign: 'center',\n    fontFamily: 'Arial, sans-serif',\n    marginTop: 40\n  },\n  board: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 100px)',\n    gap: 10,\n    justifyContent: 'center'\n  },\n  cell: {\n    width: 100,\n    height: 100,\n    fontSize: 60,\n    backgroundColor: '#f0f0f0',\n    borderRadius: 10,\n    cursor: 'pointer',\n    lineHeight: '100px',\n    userSelect: 'none',\n    transition: 'background-color 0.3s'\n  },\n  cellHover: {\n    backgroundColor: '#ddd'\n  },\n  status: {\n    marginTop: 20,\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  button: {\n    marginTop: 15,\n    padding: '10px 20px',\n    fontSize: 16,\n    borderRadius: 8,\n    cursor: 'pointer'\n  }\n};\nfunction TicTacToe() {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [turn, setTurn] = useState('X');\n  const [winner, setWinner] = useState(null);\n  const winPatterns = [[0, 1, 2], [3, 4, 5], [6, 7, 8],\n  // rows\n  [0, 3, 6], [1, 4, 7], [2, 5, 8],\n  // cols\n  [0, 4, 8], [2, 4, 6] // diagonals\n  ];\n  const checkWinner = board => {\n    for (const [a, b, c] of winPatterns) {\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n        return board[a];\n      }\n    }\n    return null;\n  };\n  const handleClick = index => {\n    if (board[index] || winner) return;\n    const newBoard = board.slice();\n    newBoard[index] = turn;\n    setBoard(newBoard);\n    const win = checkWinner(newBoard);\n    if (win) {\n      setWinner(win);\n    } else if (!newBoard.includes(null)) {\n      setWinner('draw');\n    } else {\n      setTurn(turn === 'X' ? 'O' : 'X');\n    }\n  };\n  const restartGame = () => {\n    setBoard(Array(9).fill(null));\n    setTurn('X');\n    setWinner(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.board,\n      children: board.map((cell, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleClick(idx),\n        style: styles.cell,\n        onMouseEnter: e => e.currentTarget.style.backgroundColor = '#ddd',\n        onMouseLeave: e => e.currentTarget.style.backgroundColor = '#f0f0f0',\n        children: cell\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.status,\n      children: [!winner && `Player ${turn}'s turn`, winner === 'draw' && \"It's a draw!\", winner && winner !== 'draw' && `Player ${winner} wins!`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.button,\n      onClick: restartGame,\n      children: \"Restart Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(TicTacToe, \"PI7u28g8XD6wSqrg8eTramY1qMA=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","styles","container","textAlign","fontFamily","marginTop","board","display","gridTemplateColumns","gap","justifyContent","cell","width","height","fontSize","backgroundColor","borderRadius","cursor","lineHeight","userSelect","transition","cellHover","status","fontWeight","button","padding","TicTacToe","_s","setBoard","Array","fill","turn","setTurn","winner","setWinner","winPatterns","checkWinner","a","b","c","handleClick","index","newBoard","slice","win","includes","restartGame","style","children","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","onClick","onMouseEnter","e","currentTarget","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/91777/Desktop/React/gamehub/src/components/Games.js"],"sourcesContent":["// TicTacToe.jsx\nimport React, { useState } from 'react';\n\nconst styles = {\n  container: {\n    textAlign: 'center',\n    fontFamily: 'Arial, sans-serif',\n    marginTop: 40,\n  },\n  board: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(3, 100px)',\n    gap: 10,\n    justifyContent: 'center',\n  },\n  cell: {\n    width: 100,\n    height: 100,\n    fontSize: 60,\n    backgroundColor: '#f0f0f0',\n    borderRadius: 10,\n    cursor: 'pointer',\n    lineHeight: '100px',\n    userSelect: 'none',\n    transition: 'background-color 0.3s',\n  },\n  cellHover: {\n    backgroundColor: '#ddd',\n  },\n  status: {\n    marginTop: 20,\n    fontWeight: 'bold',\n    fontSize: 20,\n  },\n  button: {\n    marginTop: 15,\n    padding: '10px 20px',\n    fontSize: 16,\n    borderRadius: 8,\n    cursor: 'pointer',\n  }\n};\n\nfunction TicTacToe() {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [turn, setTurn] = useState('X');\n  const [winner, setWinner] = useState(null);\n\n  const winPatterns = [\n    [0,1,2],[3,4,5],[6,7,8], // rows\n    [0,3,6],[1,4,7],[2,5,8], // cols\n    [0,4,8],[2,4,6]          // diagonals\n  ];\n\n  const checkWinner = (board) => {\n    for (const [a,b,c] of winPatterns) {\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n        return board[a];\n      }\n    }\n    return null;\n  };\n\n  const handleClick = (index) => {\n    if (board[index] || winner) return;\n\n    const newBoard = board.slice();\n    newBoard[index] = turn;\n    setBoard(newBoard);\n\n    const win = checkWinner(newBoard);\n    if (win) {\n      setWinner(win);\n    } else if (!newBoard.includes(null)) {\n      setWinner('draw');\n    } else {\n      setTurn(turn === 'X' ? 'O' : 'X');\n    }\n  };\n\n  const restartGame = () => {\n    setBoard(Array(9).fill(null));\n    setTurn('X');\n    setWinner(null);\n  };\n\n  return (\n    <div style={styles.container}>\n      <h1>Tic Tac Toe</h1>\n      <div style={styles.board}>\n        {board.map((cell, idx) => (\n          <div\n            key={idx}\n            onClick={() => handleClick(idx)}\n            style={styles.cell}\n            onMouseEnter={e => e.currentTarget.style.backgroundColor = '#ddd'}\n            onMouseLeave={e => e.currentTarget.style.backgroundColor = '#f0f0f0'}\n          >\n            {cell}\n          </div>\n        ))}\n      </div>\n      <div style={styles.status}>\n        {!winner && `Player ${turn}'s turn`}\n        {winner === 'draw' && \"It's a draw!\"}\n        {winner && winner !== 'draw' && `Player ${winner} wins!`}\n      </div>\n      <button style={styles.button} onClick={restartGame}>Restart Game</button>\n    </div>\n  );\n}\n\nexport default TicTacToe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}